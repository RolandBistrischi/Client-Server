<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
  <data name="pictureBox1.InitialImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        /9j/4AAQSkZJRgABAQEAAAAAAAD/2wBDAAgGBgcGBQgHBwcJCQgKDBQNDAsLDBkSEw8UHRofHh0aHBwg
        JC4nICIsIxwcKDcpLDAxNDQ0Hyc5PTgyPC4zNDL/2wBDAQkJCQwLDBgNDRgyIRwhMjIyMjIyMjIyMjIy
        MjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjL/wgARCADIAMgDASIAAhEBAxEB/8QA
        HAABAAMBAQEBAQAAAAAAAAAAAAYHCAUCBAMB/8QAFQEBAQAAAAAAAAAAAAAAAAAAAAH/2gAMAwEAAhAD
        EAAAAL/AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAcWnS7Kipf5VlljUaNn9DFdsJfji9oA
        AAAAAIdS5edM1h/F9XnRU7JDYFSeSQ9qA+Cy4pwvRA7Oq8utpNiSwk0yh0xQAAADl1ncH5lHO5UK2E91
        gWYlHSSCp0IKlFFrZj3XRYXV/e1U5/UAAAAACPZs0nmwvGqrVq40oRIlqlJ8S3M+mM1lo0deNHLpOQx6
        QoAAAAABHs2aTzYXjV1o1caUzdpHNq1lZ1Y2aaSzXpTNaWjR140cuk5DHZEgAAAACI9+iD9a2nRfMXlQ
        kFYS8VfIZeJBWsqH8g06H32nTv1GhnwfegAAAFI83QAz+0AXP7QAz+0AM/tADP7QAz+0AM/tACkbuEAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA//8QAMRAAAAUDAQcDAwQDAQAAAAAAAgMEBQYAAQcT
        EhYXN1RVVhQwNhAVUxEYQHAgIiZS/9oACAEBAAEMAP6J/X+O7PbYxI7q3RcQkIlGeCw7aeNItQXEyaet
        9VvCr24vnksVwJ5Ki0xNL22PqOytrXEKyP4T/K2SMJ9Z3cCU9SjO6xTtp42jslLcXRc8LBK3FacrUfVu
        dF7QrCrblh6RRGM7rE2wnkiOyotglbJJ0+s0OBKj35JPo7FQXs5Lweok+b3tz2yGQoLWmUKT1akahScY
        efjheqPw88GDXlJjcslDVRaMKS0pS4xqjH/JKoaegAAjFciFH4y+Xd7WEjem1fDGuafbjdhqIJVybCjZ
        dQ6JkRmX3p9a1BUbF/q2J1J6RSBQmOMIPjGb3ts2CHsoLomjc+jsqBazavB6j2pRkuPxjbJNOMVrZPl2
        UPu2QhsNqRiAeMYhiLNELSN/EZWkb+IymLIQmOKGx0EZTnpDcnqzSmtFu0hC1t+SDW2WOEjIjJHrVWQE
        6lC8JbQ1GUE3JTypgAoopQBOLXZC9dDgRi8VTAb5FkYUkYC2lXFk1i9I38RlaRv4jKCA8AwjCWaEUYy7
        KGHYIW2G6o4vkuPyfYJKOMSLfYfWcTy23SEuK1uG/NK9gWFpzJBkJdbXWdflStdZ1+VK11nX5UrXWdfl
        StdZ1+VK11nX5UrXWdflStdZ1+VK11nX5UrXWdflStdZ1+VK11nX5UrXWdflSmFqXv6wxOXIMhIbMTOJ
        mbbJDnFa4j9k8kKggwkdxWDM8fGtEWXubTKJCFRHV0ikMjb2gEicyhZHhy+KRsDu2Sp+Ms3O8qdXFOgR
        O7qcqZcVKwow3epg/nKuFqLyWU1wtReSymuFqLyWU084pVjRiuyzB/JVOLvKmpxUIFrw6kqscQ5fK42N
        3dJU/F2kS6RR6RuDQOROZt4Zj413iyBzdpRIRHkEhTkFkguK4fbnnwF/rGfMlgrNXLRXWECQG5ECMYbX
        v/jm8ksrIghgDawsK8tUlZM5kv8AUD+AsHuzz4C/1jPmSwVmrlorrBnMIf0m+QGuEJibqwGKFf7hSPGj
        qhGQGubpjrpAGJ1dZz5ggrC3LVJWTOZL/UD+AsHuzz4C/wBYz5ksFZq5aK6wZzCH9M7CvefEWve97Vgk
        V7T4+1r3tas58wQVhblqkrJnMl/qB/AWD3Z58Bf6xnzJYKzVy0V1gzmEP6Z1+fk/TBXz876Zz5ggrCvL
        VJWTOZL/AFA/gLB7k8nyGCN6c5SQNSofs6FPbA4Nf2HRqMPgI7JW94uUFRaa5gLl8ZOZ7M/pbwSYFwuQ
        3dbpbK6/cQV45U1l45nIhuppBSYO2D/2GoVLzIZIgOpRBSm37iCvHKncwLmkhs62S2SVCswFxCMks92f
        1V5O+AkUlcHixQU9mHOhTIwN7X9h1qgc+QztvUHJiBJlHsvToUyMyxyOLGYWtzG+rjf1OiTcaDiq6+FM
        lcVHXwpkrio6+FMlcVHXwpkriq6+FMlcVHXwpkriq6+FMlcVHXwpkriq6+FMlcVHXwpkrio6+FMlcVHX
        wpkriq6+FMlIcxvqE39SYk3FAZXQp7ZkbkSWMsv2H6WZVNelX2liWJUO9GZ+3La3ozP25bW9GZ+3La3o
        zP25bW9GZ+3La3ozP25bW9GZ+3La3ozP25bW9GZ+3La3ozP25bW9GZ+3La3ozP25bW9GZ+3La3ozP25b
        W9GZ+3LaYZZlUp6S/dmJYqQ/01//xAA8EAACAAMEBwQIBAYDAAAAAAABAgADEQQSITETFFFhcXSyMEF1
        0QUQIjJygZHCIIKx0kJEYnCSwSNAUv/aAAgBAQANPwD+0A/jmvSu4DMncIy1u1gheKpmfnThF6tz2dHw
        uUpSMtbsgJXiyZj5E8IP8cp603EZg7j/ANMiqyyazH+FRiYy1q0gNMO9UyHzrwg5zJzliNw2DcPwLlMk
        uVJ3HaNxjLWrMAswb2TJvlThAFWlg0mJ8SnEdvSossn25p/KMuJoIOGlNHnsOOS/IE74c1ebNcszcScY
        sLTZVltU6WCLMoRSCaKSQCSciYmIt/0xZkVUnuy4IAMfaIriBlh3xL9GpLW1EqdLOcMZh2i69047Y9HW
        yzyijIP+HSOyzGyrgaEg7Im2ZLb6PKy1YSXmPdmqpI4fIiLTcS1260Kq0lCaQRkBUgKBlWHs6k2lkUzL
        bleLMFAWjDIU7jkYQ1SbKcqy8CMYGGlFEnqOOTfMA74pU2Wd7E0flOfEVHZr/K2Rb7A/1HJfma7obC5Z
        wTNYb5lK/wCNIY1ZipJJ2k98fAY+AxaFYWpnnTVM8kUJNPdqABhsj0a6zJFiUzKX19wlszdNTSmJzi2q
        Fas+dRf/AEd96i92F0Uj0swmWtlnzvbmAkq1MhQmtBQGDIFnFrYvpLoIK4UoaAARLUaICdNJRga3ssTU
        k4nviQl2yzdNNZ5Bu3QQSKnDace+PgMfAYU1VgpBB2g90LhctAYTVG6ZSv8AlWG/lbWtxif6Tk3yNd3Y
        3w62ixOEcEd2VCD3iHS+JtglpOTgTmD8u+OSWOSWOSWOSWOSWOSWOSWOSWOSWOSWOSWOSWOSWES+Ztvl
        pJTPIHMn5d0Xy7Wi2uHck92VAB3DspilGusVNCKYEYjjFjlNOuT/AEg7o6riR3EGmRi1zhL0htcw3RmT
        S9sBiVMSXPl2i2ub140DKRSmNMItDiXLQWyZiT+bAQRVlstueXLU7BWpPE04R4o3lHijeUeKN5QBVVtV
        teZLY7DShHEV4RZ3MuYhtkzAj82IibMeXIl2e2uLt00LMTWuNcIsk4y9ILXMF4Zg0vYYERa5Szrkj0g6
        IitiF7yTTMxLUIt5ixoBTEnE8e01Cd0mNZ+xo08jrESrHOdNx9kV+hP1/FNscl3O0+0K/QD6Rp5/WY1n
        7FjUJPSO11Cd0mNZ+xo08jrEajN/VPVPqZNmlEBmAzYk4Ab/AKRzi/tiRQzrNOIvKDkwIwI3/X1ajK6n
        jTz+sxrP2LGoSekdrqE7pMaz9jRp5HWI1Gb+qeoWCXQbPaf1GwTKjb7SerUZXU8aef1mNZ+xY1CT0jtd
        QndJjWfsaNPI6xGozf1T1ahL6n9WoTOpPVqMrqeNPP6zGs/YsahJ6R2lpYrIkI4W9T3iWOQFRtzi12d5
        Ok1wNdvClaXcYsk3SaLSBb2BFK40z2RMmS30ptQel1q0pdEGQ8nRicE94g1rQ7I54fsjRrKlylmXrqrX
        M4VNSe6OIjRtKmSmmXbytTI40NQO6OeH7IEhJOjM4P7pJrWg2xLmTH0otQSt5q0pdMWubpNFpA1zAClc
        K5bIslnSTpNcC3ropWl3CLMwWdIZw12vukMMwaHZl2VlktNKSxVmoMhvMKTo1tFnmTCoO8/6Eci8ci8c
        i8ci8ci8ci8ci8ci8ci8ci8ci8ci8ci8MRpFs9nmSywG8f7EWqSs0JMFGWoyO8disxkkqLAJhZQaBix7
        znhhjHhieUeGJ5R4YnlHhieUeGJ5R4YnlHhieUeGJ5R4YnlHhieUeGJ5R4YnlHhieUeGJ5R4YnlDTFSc
        psAllVJoWDDvGeOGH9m//8QAFBEBAAAAAAAAAAAAAAAAAAAAcP/aAAgBAgEBPwAp/8QAGhEAAwADAQAA
        AAAAAAAAAAAAAAERMEBQIP/aAAgBAwEBPwDmQmKepsIWJDELVpSlKUvL/9k=
</value>
  </data>
</root>